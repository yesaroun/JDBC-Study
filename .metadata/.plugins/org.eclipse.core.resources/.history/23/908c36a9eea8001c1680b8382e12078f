/*==================
 * 	DBConn.java
 * =================*/

// ※ 싱글톤(singleton) 디자인 패턴을 이용한 Database 연결 객체 생성 전용 클래스
//	  → DB 연결 과정이 가장 부하가 크기 때문에
//	  	 한 번 연결된 객체를 계속 사용한느 것이 좋지 않을까...

package com.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DBConn
{
	// 변수 선언
	private static Connection dbConn;
	
	// 메소드 정의 → 연결
	public static Connection getConnection() throws ClassNotFoundException, SQLException
	{
		// 한 번 연결된 객체를 계속 사용
		// 즉, 연결되지 않은 경우에만 연결을 시도하겠다는 의미
		// → 싱글톤(디자인 패턴)
		if (dbConn == null)
		{
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			//-- 『localhost』 는 오라클 서버의 ip 주소를 기재하는 부분
			//	 『1521』 은 오라클 리스너 Port Number
			//	  『xe』 는 오라클 SID(Express Edition 의 SID는 xe)
			
			String user = "scott";
			//-- 오라클 사용자 계정 이름
			
			String pwd = "tiger";
			//-- 오라클 사용자 계정 암호
			
			Class.forName("oracle.jdbc.driver.OracleDriver");
			//-- OrcleDriver 클래스에 대한 객체 생성(클래스 찾아줘~)
			
			dbConn = DriverManager.getConnection(url, user, pwd);
			//-- 오라클 서버 실제 연결
			//	 갖고 있는 인자값(매개변수)은 오라클주소, 계정명, 패스워드
			
			
		}
		
		return dbConn;
	}
	
}
